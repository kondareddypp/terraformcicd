name: 'Terraform CI/CD with Azure'

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download Terraform
      run: |
        curl -LO https://releases.hashicorp.com/terraform/1.0.0/terraform_1.0.0_linux_amd64.zip
        unzip terraform_1.0.0_linux_amd64.zip
        sudo mv terraform /usr/local/bin/

    - name: Verify Terraform Installation
      run: terraform --version

    - name: Create a Hello World script
      run: |
        echo 'print("Hello, World!")' > helloworld.py

    - name: Run Hello World script
      run: python3 helloworld.py

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create Service Principal
      run: |
        az ad sp create-for-rbac --name "terraform-sp" --role contributor --scopes /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }} > sp.json
        echo "AZURE_CLIENT_ID=$(jq -r .appId sp.json)" >> $GITHUB_ENV
        echo "AZURE_CLIENT_SECRET=$(jq -r .password sp.json)" >> $GITHUB_ENV
        echo "AZURE_TENANT_ID=$(jq -r .tenant sp.json)" >> $GITHUB_ENV

    - name: Set up Azure authentication environment variables
      run: |
        echo "ARM_CLIENT_ID=${{ env.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
        echo "ARM_CLIENT_SECRET=${{ env.AZURE_CLIENT_SECRET }}" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=${{ env.AZURE_TENANT_ID }}" >> $GITHUB_ENV

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve
